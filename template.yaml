AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: AWS SAM template for dalr finance app
Resources:
  ApiGatewayApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: Prod
  GetQuoteLambdaFunction:
    Type: AWS::Serverless::Function
    Properties: &LambdaProperties
      Environment:
        Variables:
          NODE_ENV: development
          IEX_TOKEN: '{{resolve:secretsmanager:IEX/tokens:SecretString:IEX_TOKEN}}'
          IEX_TOKEN_PROD: '{{resolve:secretsmanager:IEX/tokens:SecretString:IEX_TOKEN_PROD}}'
      Handler: src/lambda/getQuote/index.handler
      Runtime: nodejs14.x
      Events:
        ProxyApiRoot:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGatewayApi
            Path: /quote
            Method: GET
  GetTransactionHistoryLambdaFunction:
    Type: AWS::Serverless::Function
    Properties:
      <<: *LambdaProperties
      Handler: src/lambda/getTransactionHistory/index.handler
      Events:
        ProxyApiRoot:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGatewayApi
            Path: /transaction-history
            Method: GET
  GetUserLambdaFunction:
    Type: AWS::Serverless::Function
    Properties:
      <<: *LambdaProperties
      Handler: src/lambda/getUser/index.handler
      Events:
        ProxyApiRoot:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGatewayApi
            Path: /user
            Method: GET
  PostBuyStockLambdaFunction:
    Type: AWS::Serverless::Function
    Properties:
      <<: *LambdaProperties
      Handler: src/lambda/postBuyStock/index.handler
      Events:
        ProxyApiRoot:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGatewayApi
            Path: /buy
            Method: POST
  PostCreateUserLambdaFunction:
    Type: AWS::Serverless::Function
    Properties:
      <<: *LambdaProperties
      Handler: src/lambda/postCreateUser/index.handler
      Events:
        ProxyApiRoot:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGatewayApi
            Path: /user
            Method: POST
  PostFundAccountLambdaFunction:
    Type: AWS::Serverless::Function
    Properties:
      <<: *LambdaProperties
      Handler: src/lambda/postFundAccount/index.handler
      Events:
        ProxyApiRoot:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGatewayApi
            Path: /fund
            Method: POST
  PostSellAccountLambdaFunction:
    Type: AWS::Serverless::Function
    Properties:
      <<: *LambdaProperties
      Handler: src/lambda/postSellAccount/index.handler
      Events:
        ProxyApiRoot:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGatewayApi
            Path: /sell
            Method: POST
  PostWithdrawAccountLambdaFunction:
    Type: AWS::Serverless::Function
    Properties:
      <<: *LambdaProperties
      Handler: src/lambda/postWithdrawAccount/index.handler
      Events:
        ProxyApiRoot:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGatewayApi
            Path: /withdraw
            Method: POST
